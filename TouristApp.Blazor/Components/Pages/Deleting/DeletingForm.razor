@using TouristApp.Blazor.Models
@using TouristApp.Blazor.Models.Pinpoints
@using TouristApp.Blazor.Services.Categories
@using TouristApp.Blazor.Services.PinpointCategoryService
@using TouristApp.Blazor.Services.Pinpoints
@using TouristApp.Blazor.Services.Routes
@using TouristApp.Blazor.Services.TouristRoutes
@using TouristApp.Blazor.Utils
@inject ICategoryService CategoryService
@inject IPinpointService PinpointService
@inject IRouteService RouteService
@inject ITouristRouteService TouristRouteService
@inject IPinpointCategoryService PinpointCategoryService
@inject NavigationManager NavManager

<!DOCTYPE html>

<html>

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />

</head>

<body class="flex-column">
@if (_isLoaded)
{
<section class="untitled-page3 editDataSection" style="--src:url(../assets/38414e2776364ef6203ce0219080c1ab.png)">
    <!-- Main section for editing entered data -->
    <div class="editContentWrapper">
        <h1 class="pageHeading" style="color:#000000">Удаление данных</h1>
        <div class="editColumnsContainer">
            <div class="pointEditColumn">
                <!-- Column for editing point data -->
                <h2 class="selectPointHeading" style="color:#000000">Выбрать точку:</h2>
                <form>
                    <select style="display:table-cell; width:100%; height: 100%; font-size: medium;" id="category-select" @bind="@_pinpoint.Id">
                        <option value="00000000-0000-0000-0000-000000000000">Выберите точку</option>
                        @foreach (var pinpoint in _pinpoints)
                        {
                        <option value="@pinpoint.Id">@pinpoint.Name</option>
                        }
                    </select>
                </form>
                <button class="savePointBtn" @onclick="DeletePinpoint">
                    <!-- TODO -->
                    Удалить
                </button>
            </div>
            <div class="pathCategoryEditColumn">
                <!-- Column for editing path and category data -->
                <h2 class="selectPathHeading" style="color:#000000">Выбрать путь:</h2>
                <form>
                    <select style="display:table-cell; width:100%; height: 100%; font-size: medium;" id="category-select" @bind="@_route.Id">
                        <option value="00000000-0000-0000-0000-000000000000">Выберите маршрут</option>
                        @foreach (var route in _routes)
                        {
                        <option value="@route.Id">@route.Name</option>
                        }
                    </select>
                </form>
                <button class="savePathBtn" @onclick="DeleteRoute">
                    <!-- TODO -->
                    Удалить
                </button>
                <h2 class="selectCategoryHeading" style="color:#000000">Выбрать категорию:</h2>
                <form>
                    <select style="display:table-cell; width:100%; height: 100%; font-size: medium;" id="category-select" @bind="@_category.Id">
                        <option value="00000000-0000-0000-0000-000000000000">Выберите категорию</option>
                        @foreach (var category in _categories)
                        {
                        <option value="@category.Id">@category.Name</option>
                        }
                    </select>
                </form>
                <button class="saveCategoryBtn" @onclick="DeleteCategory">
                    <!-- TODO -->
                    Удалить
                </button>
            </div>
        </div>
    </div>
</section>
}
</body>
</html>


@code {
    private Category[] _categories;
    private Pinpoint[] _pinpoints;
    private Route[] _routes;
    private TouristRoute[] _touristRoutes;
    private PinpointCategory[] _pinpointCategories;
    private Category _category = new();
    private StringPinpoint _pinpoint = new();
    private Route _route = new();
    private bool _isLoaded;

    async protected override Task OnInitializedAsync() {
        _categories = await CategoryService.GetAll();
        _pinpoints = await PinpointService.GetAll();
        _routes = await RouteService.GetAll();
        _touristRoutes = await TouristRouteService.GetAll();
        _pinpointCategories = await PinpointCategoryService.GetAll();
        
        _isLoaded = true;
    }
    
    private async Task DeletePinpoint() {
        if (_pinpoint.Id != Guid.Empty)
        {
            await PinpointService.Delete(_pinpoint.Id);

            var trsids = _touristRoutes
                .Where(tr => tr.PinpointId == _pinpoint.Id)
                .Select(tr => tr.Id);

            var pcids = _pinpointCategories
                .Where(pc => pc.PinpointId == _pinpoint.Id)
                .Select(pc => pc.Id);

            foreach (var id in trsids)
            {
                await TouristRouteService.Delete(id);
            }

            foreach (var id in pcids)
            {
                await PinpointCategoryService.Delete(id);
            }
            
            NavManager.ReloadPage();
        }
    }

    private async Task DeleteRoute() {
        if (_route.Id != Guid.Empty)
        {
            await RouteService.Delete(_route.Id);
            
            var trsids = _touristRoutes
                .Where(tr => tr.RouteId == _route.Id)
                .Select(tr => tr.Id);

            foreach (var id in trsids)
            {
                await TouristRouteService.Delete(id);
            }
            
            NavManager.ReloadPage();
        }
    }

    private async Task DeleteCategory() {
        if (_category.Id != Guid.Empty)
        {
            await CategoryService.Delete(_category.Id);
            
            var pcids = _pinpointCategories
                .Where(pc => pc.CategoryId == _category.Id)
                .Select(pc => pc.Id);
            
            foreach (var id in pcids)
            {
                await PinpointCategoryService.Delete(id);
            }
            
            NavManager.ReloadPage();
        }
    }
}